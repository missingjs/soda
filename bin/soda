#!/bin/bash

self_dir=$(cd $(dirname $0) && pwd)
top_dir=$(dirname $self_dir)
export SODA_FRAMEWORK_DIR=$top_dir/framework
framework_dir=$SODA_FRAMEWORK_DIR

usage()
{
    cat << EOF
usage:
    $(basename $0) <lang> [options]

lang: 
    python, cpp, java

python options:
    new <srcfile>                 create python source file
    run <srcfile> <datafile>...   run test case

java options:
    new <srcfile>                  create java source file
    compile <srcfile>              compile source file
    run <classname> <datafile>...  run test case
    go <classname> <datafile>...   compile && run
EOF
    exit 1
}

create_source_file()
{
    template_file=$1
    target_file=$2
    [ -z $target_file ] && usage
    [ -e $target_file ] && { echo "Error: $target_file exists" >&2; exit 2; }
    cat $template_file > $target_file && echo "$target_file OK"
}

handle_python()
{
    cmd=$1
    [ -z $cmd ] && usage
    shift
    case $cmd in
        new)
            create_source_file $framework_dir/python/src/soda/unittest/bootstrap.py "$1"
            ;;
        run)
            run_test python "$@"
            ;;
        *)
            usage
            ;;
    esac
}

compile_java()
{
    srcfile=$1
    [ -z $srcfile ] && usage
    bash $framework_dir/java/compile.sh $srcfile && echo "Compile $srcfile OK"
}

run_test()
{
    export PYTHONPATH="$framework_dir/python/src:$PYTHONPATH"
    runner=soda.unittest.tester
    python3 -m $runner "$@"
}

handle_java()
{
    cmd=$1
    [ -z $cmd ] && usage
    shift
    case $cmd in
        new)
            template_file=$framework_dir/java/src/main/java/soda/unittest/__Bootstrap__.java
            target_file=$1
            create_source_file $template_file "$target_file" || exit
            filename=$(basename $target_file)
            classname=${filename%.java}
            echo "import soda.unittest.*;" > ${classname}.tmp
            cat $target_file | grep -v '^package ' | sed "s/__Bootstrap__/$classname/g" >> ${classname}.tmp
            mv ${classname}.tmp $target_file
            ;;
        compile)
            compile_java "$1"
            ;;
        run)
            run_test java "$@"
            ;;
        go)
            classname=$1
            srcfile=${classname}.java
            compile_java $srcfile && run_test java "$@"
            ;;
        *)
            usage
            ;;
    esac
}

language=$1
[ -z $language ] && usage

shift

case $language in
    python)
        handle_python "$@"
        ;;
    java)
        handle_java "$@"
        ;;
    *)
        usage
        ;;
esac

