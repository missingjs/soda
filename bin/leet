#!/bin/bash

self_dir=$(cd $(dirname $0) && pwd)
top_dir=$(dirname $self_dir)
genmake=$self_dir/gen-leetcode-makefile.sh

usage()
{
    cat <<EOF
usage:
    leet new <name or file>
    leet run <name or file>
    leet clean <name or file>
EOF
    exit 1
}

create_file()
{
    [ $# -eq 0 ] && usage
    filename=$1
    template=$self_dir/template/template.cpp
    if [ -e $filename ]; then
        echo "ERROR: $filename exists"
        exit 10
    else
        cp $template $filename && echo $filename OK
    fi
}

build_leetcode()
{
    [ $# -eq 0 ] && usage
    local case_name=${1%.cpp}
    local makefile=Makefile.gen.$case_name
    bash $genmake -b $top_dir -c $case_name > $makefile
    make -f $makefile
}

run_leetcode()
{
    local case_name=${1%.cpp}
    export LD_LIBRARY_PATH=$top_dir/lib/leetcode:$LD_LIBRARY_PATH
    ASAN_OPTIONS="detect_leaks=0" ./${case_name}.out
}

clean_leetcode()
{
    local case_name=${1%.cpp}
    local makefile=Makefile.gen.$case_name
    make -f $makefile clean
}

subcmd=$1

case $subcmd in
    new)
        shift
        create_file "$@"
        ;;
    run)
        shift
        run_leetcode "$@"
        ;;
    make | build | compile)
        shift
        build_leetcode "$@"
        ;;
    clean)
        shift
        clean_leetcode "$@"
        ;;
    *)
        usage
        ;;
esac

